{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAmCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CACNH,WACAC,UAGFG,EAAO,CACLJ,WACAC,S,GAGHA,E,KAjDM,CACXQ,OAAQC,SAASC,cAAc,SAC/BV,MAAOS,SAASC,cAAc,gBAC9BC,KAAMF,SAASC,cAAc,eAC7BE,OAAQH,SAASC,cAAc,mBAG5BF,OAAOK,iBAAiB,UAE7B,SAAwBC,GACtBA,EAAMC,iBAON,IALA,IAAgCC,EAAAF,EAAMG,cAAcC,SAA5CC,EAAwBH,EAAxBhB,MAAOW,EAAiBK,EAAjBL,KAAMC,EAAWI,EAAXJ,OACjBQ,EAAcC,OAAOF,EAAMG,OAC3BC,EAAaF,OAAOV,EAAKW,OACzBE,EAAeH,OAAOT,EAAOU,OAExBG,EAAI,EAAGA,GAAKD,EAAcC,IACjC3B,EAAc2B,EAAGL,GACdM,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MACjB4B,EAAAhC,GAASiC,OAAOC,QACd,uBAAwCC,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,IAGjDgC,OAAM,SAAAL,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MAClB4B,EAAAhC,GAASiC,OAAOI,QACd,sBAAqCF,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,IAGjDoB,GAAeG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  delay: document.querySelector('[name=delay]'),\n  step: document.querySelector('[name=step]'),\n  amount: document.querySelector('[name=amount]'),\n};\n\nrefs.formEl.addEventListener('submit', onFormElSubmit);\n\nfunction onFormElSubmit(event) {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.currentTarget.elements;\n  let delayNumber = Number(delay.value);\n  let stepNumber = Number(step.value);\n  let amountNumber = Number(amount.value);\n\n  for (let i = 1; i <= amountNumber; i++) {\n    createPromise(i, delayNumber)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delayNumber += stepNumber;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({\n          position,\n          delay,\n        });\n      } else {\n        reject({\n          position,\n          delay,\n        });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","formEl","document","querySelector","step","amount","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","delayNumber","Number","value","stepNumber","amountNumber","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.5b37f34e.js.map"}