{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,MAAOF,SAASC,cAAc,gBAC9BE,KAAMH,SAASC,cAAc,eAC7BG,OAAQJ,SAASC,cAAc,kBA4BjC,SAASI,EAAcC,EAAUJ,GAC/B,OAAO,IAAIK,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SACNF,E,MACAJ,IAGFO,EAAO,C,SACLH,E,MACAJ,GACA,GAEHY,OAAOhB,EAAKI,MAAMa,OAAO,G,CAzChCjB,EAAKC,OAAOiB,iBAAiB,UAE7B,SAAwBC,GACtBA,EAAMC,iBAEN,MAAQhB,MAAAiB,EAAKhB,KAAEA,EAAIC,OAAEA,GAAWa,EAAMG,cAAcC,SACpD,IAAIC,EAAcR,OAAOK,EAAMJ,OAC3BQ,EAAaT,OAAOX,EAAKY,OACzBS,EAAeV,OAAOV,EAAOW,OAEjC,IAAK,IAAIU,EAAI,EAAGA,GAAKD,EAAcC,IACjCpB,EAAcoB,EAAIH,GAAeC,GAC9BG,MAAK,EAACpB,SAAEA,EAAQJ,MAAEA,MACjByB,EAAA/B,GAASgC,OAAOC,QACd,uBAAqBvB,QAAiBJ,MAAU,IAGnD4B,OAAM,EAACxB,SAAEA,EAAQJ,MAAEA,MAClByB,EAAA/B,GAASgC,OAAOG,QACd,sBAAoBzB,QAAeJ,MAAU,G,IAyBvD8B,QAAQC,IAAI","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  delay: document.querySelector('[name=delay]'),\n  step: document.querySelector('[name=step]'),\n  amount: document.querySelector('[name=amount]'),\n};\n\nrefs.formEl.addEventListener('submit', onFormElSubmit);\n\nfunction onFormElSubmit(event) {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.currentTarget.elements;\n  let delayNumber = Number(delay.value);\n  let stepNumber = Number(step.value);\n  let amountNumber = Number(amount.value);\n\n  for (let i = 1; i <= amountNumber; i++) {\n    createPromise(i, (delayNumber += stepNumber))\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({\n          position,\n          delay,\n        });\n      } else {\n        reject({\n          position,\n          delay,\n        });\n      }\n    }, Number(refs.delay.value));\n  });\n}\nconsole.log('hello');\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","formEl","document","querySelector","delay","step","amount","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","Number","value","addEventListener","event","preventDefault","delay1","currentTarget","elements","delayNumber","stepNumber","amountNumber","i","then","$parcel$interopDefault","Notify","success","catch","failure","console","log"],"version":3,"file":"03-promises.4668a315.js.map"}