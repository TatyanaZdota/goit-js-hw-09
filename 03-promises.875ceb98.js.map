{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,MAAOF,SAASC,cAAc,gBAC9BE,KAAMH,SAASC,cAAc,eAC7BG,OAAQJ,SAASC,cAAc,kBA6BjC,SAASI,EAAcC,EAAUJ,GAC/B,OAAO,IAAIK,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CACNF,WACAJ,UAGFO,EAAO,CACLH,WACAJ,S,GAGHY,OAAOhB,EAAKI,MAAMa,O,IA1CzBjB,EAAKC,OAAOiB,iBAAiB,UAE7B,SAAwBC,GACtBA,EAAMC,iBAON,IALA,IAAgCC,EAAAF,EAAMG,cAAcC,SAA5CC,EAAwBH,EAAxBjB,MAAOC,EAAiBgB,EAAjBhB,KAAMC,EAAWe,EAAXf,OACjBmB,EAAcT,OAAOQ,EAAMP,OAC3BS,EAAaV,OAAOX,EAAKY,OACzBU,EAAeX,OAAOV,EAAOW,OAExBW,EAAI,EAAGA,GAAKD,EAAcC,IACjCrB,EAAcqB,EAAGH,GACdI,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUJ,EAAK0B,EAAL1B,MACjB2B,EAAAjC,GAASkC,OAAOC,QACd,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAAN9B,EAAM,M,IAGjD+B,OAAM,SAAAL,G,IAAGtB,EAAQsB,EAARtB,SAAUJ,EAAK0B,EAAL1B,MAClB2B,EAAAjC,GAASkC,OAAOI,QACd,sBAAqCF,OAAf1B,EAAS,QAAY0B,OAAN9B,EAAM,M,IAGjDqB,GAAeC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  delay: document.querySelector('[name=delay]'),\n  step: document.querySelector('[name=step]'),\n  amount: document.querySelector('[name=amount]'),\n};\n\nrefs.formEl.addEventListener('submit', onFormElSubmit);\n\nfunction onFormElSubmit(event) {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.currentTarget.elements;\n  let delayNumber = Number(delay.value);\n  let stepNumber = Number(step.value);\n  let amountNumber = Number(amount.value);\n\n  for (let i = 1; i <= amountNumber; i++) {\n    createPromise(i, delayNumber)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delayNumber += stepNumber;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({\n          position,\n          delay,\n        });\n      } else {\n        reject({\n          position,\n          delay,\n        });\n      }\n    }, Number(refs.delay.value));\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","Number","value","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","delayNumber","stepNumber","amountNumber","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.875ceb98.js.map"}